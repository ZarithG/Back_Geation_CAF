spring.application.name=API-GATEWAY
server.port=9093
spring.cloud.config.enabled=false

# Users Microservice Routes
spring.cloud.gateway.routes[0].id=USERS-MICROSERVICE
spring.cloud.gateway.routes[0].uri=lb://USERS-MICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.routes[0].filters[0]=AuthFilter

# Users Authentication Microservice Routes
spring.cloud.gateway.routes[1].id=AUTH-MICROSERVICE
spring.cloud.gateway.routes[1].uri=lb://AUTH-MICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/**

# Users Authentication Microservice - Google Configuration
spring.cloud.gateway.routes[2].id=AUTH-MICROSERVICE
spring.cloud.gateway.routes[2].uri=lb://AUTH-MICROSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/login/oauth2/code/google

# CAF Microservice Routes for Path=caf
spring.cloud.gateway.routes[3].id=CAF-MICROSERVICE
spring.cloud.gateway.routes[3].uri=lb://CAF-MICROSERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/caf/**
spring.cloud.gateway.routes[3].filters[0]=AuthFilter

# Shift Microservice Routes for Path=shift
spring.cloud.gateway.routes[4].id=SHIFT-MICROSERVICE
spring.cloud.gateway.routes[4].uri=lb://SHIFT-MICROSERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/shift/**
spring.cloud.gateway.routes[4].filters[0]=AuthFilter

# Eureka Configuration
eureka.client.enabled=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
#eureka.client.serviceUrl.defaultZone=https://eureka-051n.onrender.com/eureka/